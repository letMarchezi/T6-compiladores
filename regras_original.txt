programa = declaraçoes "algoritmo" corpo "fim_algoritmo"
declaraçoes = {decl_local_global}
decl_local_global = declaraçao_local | declaraçao_global
declaraçao_local = "declare" variavel
                  | "constante" IDENT ":" tipo_basico "=" valor_constante
                  | "tipo" IDENT ":" tipo
variavel = identificador {"." identificador} ":" tipo
identificador = IDENT {"." IDENT} dimensao
dimensao = "[" exp_aritmetica "]"
tipo = registro | tipo_estendido
tipo_basico = literal | "inteiro" | "real" | "logico"
tipo_basico_ident = tipo_basico | IDENT
tipo_estendido = "[" "]" tipo_basico_ident
valor_constante = CADEIA | NUM_INT | NUM_REAL | "verdadeiro" | "falso"
registro = "registro" [variavel] "fim_registro"
declaraçao_global = "procedimento" IDENT "(" [parametros] ")" {declaraçao_local} (cmd)
                    "fim_procedimento"
                  | "funçao" IDENT "(" [parametros] ")" ":" tipo_estendido {declaraçao_local} (cmd)
                    "fim_funcao"
parametro = ["var"] identificador {"," identificador} ":" tipo_estendido
parametros = parametro {"," parametro}
corpo = {declaraçao_local} (cmd)
cmd = cmdLeia | cmdEscriva | cmdSe | cmdCaso | cmdPara | cmdEnquanto
    | cmdAtribuica | cmdChamada | cmdRetorne
cmdLeia = "leia" "(" ["^"] identificador {"," ["^"] identificador} ")"
cmdEscriva = "escreva" "(" expressao {"," expressao} ")"
cmdSe = "se" expressao "entao" (cmd) ["senao" (cmd)] "fim_se"


cmdCaso = "caso" exp_aritmetica "seja" seleçao ["senao" (cmd)] "fim_caso"
cmdPara = "para" IDENT "<-" exp_aritmetica "ate" exp_aritmetica "faca" (cmd) "fim_para"
cmdEnquanto = "enquanto" expressao "faca" (cmd) "fim_enquanto"
cmdFaca = "faca" (cmd) "ate" expressao
cmdAtribuica = ["^"] identificador "<-" expressao
cmdChamada = IDENT "(" [expressao {"," expressao}] ")"
cmdRetorne = "retorne" expressao
seleçao = {item_seleçao}
item_seleçao = constantes ":" (cmd)
constantes = numero_intervalo
numero_intervalo = [op_unario] NUM_INT [".." [op_unario] NUM_INT]
op_unario = "-"
exp_aritmetica = termo {op1 termo}
termo = fator {op2 fator}
fator = parcela {op3 parcela}
op1 = "+"
op2 = "*"
op3 = "^"
parcela = (op_unario) parcela_unario | parcela_nao_unario
parcela_unario = ["^"] identificador
               | IDENT "(" expressao {"," expressao} ")"
               | NUM_INT
               | NUM_REAL
               | "(" expressao ")"
parcela_nao_unario = "&" identificador | CADEIA
exp_relacional = exp_aritmetica [op_relacional exp_aritmetica]
op_relacional = ">" | ">=" | "<" | "<=" | "<>" | "="
expressao = termo_logico {op_logico_1 termo_logico}
termo_logico = fator_logico {op_logico_2 fator_logico}
fator_logico = ["nao"] parcela_logica
parcela_logica = "verdadeiro" | "falso"
               | exp_relacional
op_logico_1 = "ou"
op_logico_2 = "e"


